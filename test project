import datetime
import requests
import json
import os
from IPython import embed

BetterDoctor_api_url = 'https://api.betterdoctor.com/2016-03-01/doctors?location=37.773,-122.413,100&skip=2&limit=10&api_key=' + BetterDoctor_api_key;

openFDA_label_url = 'https://api.fda.gov/drug/label.json'

openFDA_event_url = 'https://api.fda.gov/drug/event.json'

#I dont think this is necessary anymore now that I found a way to get an API key
#get(api_url, function(data)
#    data = { meta: {<metadata>}, data: {<array[Practice]>} }
#    var template = Handlebars.compile(document.getElementById('docs-template').innerHTML);
#    document.getElementById('content-placeholder').innerHTML = template(data);
#

#response.status_code
#response.text

openFDA_label_request_url = "https://api.fda.gov/drug/label.json"
response_label = requests.get(openFDA_label_request_url)

def parse_response_label(response_text_label):

    if isinstance(response_text_label, str):
        response_text_label = json.loads(response_text_label)

openFDA_event_request_url = "https://api.fda.gov/drug/event.json"
response_event = requests.get(openFDA_event_request_url)
def parse_response_event(response_text_event):

    if isinstance(response_text_event, str):
        response_text_event = json.loads(response_text_event)

BetterDoctor_request_url = "'https://api.betterdoctor.com/2016-03-01/doctors?location=37.773,-122.413,100&skip=2&limit=10&user_key=' + BetterDoctor_api_key;"
response_BetterDoctor = requests.get(BetterDoctor_request_url)
def parse_response_BetterDoctor(response_text_BetterDoctor):

    if isinstance(response_text_BetterDoctor, str):
        response_text_BetterDoctor = json.loads(response_text_BetterDoctor)

def menu(username="@Aria"):
    menu = """
    -----------------------------------
            HELP YOUR HEALTH!
    -----------------------------------
    Welcome {username}!
    Here's all the things you can do with Help Your Health! Please choose from the menu options below.
        options   | description
        --------- | ------------------
        'Info'    | Display all information about a drug.
        'Compare' | Compare two or more drugs among a set of characteristics.
        'Doctor'  | Find a doctor in your area to get more information.

    What would you like to do today?: """
    return menu

def run():
    # Read attributes from file...
    products_label = read_products_from_file(response_text_label)
    operation = operation.title()
    input(operation)

    results_label = []
    drug_label = response_text["results"]
    #to loop through a dictionary's top-level keys/attributes
    for results_label in drug_label:
        results_label = {
            "brand_name": results_label["1.Brand Name"],
            "generic_name": results_label["2. Generic Name"],
            "purpose": results_label["3. Purpose"],
            "stop_use": results_label["4. Stop Use If"]
        }
        results.append(result_label)
    return results_label

    products_event = read_products_from_file(response_text_event)
    operation = operation.title()
    input(operation)

    results_event = []
    drug_event = response_text["results"]
    #to loop through a dictionary's top-level keys/attributes
    for results_event in drug_event:
        results_event = {
            "manufacturer_name": results_event["1.Manufacturer Name"],
            #"generic_name": results_event["2. Generic Name"],
            #"purpose": results_event["3. Purpose"],
            #"stop_use": results_event["4. Stop Use If"]
        }
        results.append(result_event)
    return results_event

    products_BetterDoctor = read_products_from_file(response_text_BetterDoctor)
    operation = operation.title()
    input(operation)

    #todo - parse response to understand JSON
    results_BetterDoctor = []
    drug_BetterDoctor = response_text["Results"]
    #to loop through a dictionary's top-level keys/attributes
    for results_label in drug_label:
        results_label = {
            "brand_name": results_label["1.Brand Name"],
            "generic_name": results_label["2. Generic Name"],
            "purpose": results_label["3. Purpose"],
            "stop_use": results_label["4. Stop Use If"]
        }
        results.append(result_label)
    return results_label

    if operation == "Info":
        print("Get More Information")
        brand_names = input("Please enter the generic or brand name of the drug you would like to learn more about: ")
        #ToDo: figure out how to pull generic name or brand name from openFDA api_key. Can I give users an option of entering one or the other?
        #ToDo: list drug attributes: uses, reactions...how do I see everything on the api?
        print("-------")
        print(brand_name)
        #print(drug attributes)
        print("-------")

    elif operation == "Compare":
        print("Compare")
        while True:
            brand_names = input("Please enter the generic or brand names of the drug you would like to learn more about: ")
            if brand_names == "DONE":
                break
            else:
                brand_name.append(int(brand_names))
        #ToDo: figure out how to pull generic names or brand names from openFDA api_key. Can I give users an option of entering one or the other?
        #ToDo: list all drug attributes: uses, reactions...how do I see everything on the api?
        print("-------")
        print(brand_name)
        #print(drug attributes)
        print("-------")

    elif operation == "Doctor":
        print("Let's find you a doctor")
        Find_a_Doctor=input("Please enter your postal code: ")
        #ToDo - pull postal code data from BetterDoctor api
        print("Here's a list of doctors in your area: ")
        #ToDo - match postal code data and list doctor attributes

    else:
        print("Please select a valid option")
